; [Engine_AST]
; file=bin
; postfix=.adv
; contentSeparate="\x0D\x0A"
; sample="""<WINDOW NAME=\"春臣\" IMAGE=\"name01.png\">
; 「ちょっ……待って…………！」

; <WINDOW>
; 真冬と夏実さんの動きは素速く……。
; """
; [Engine_AST_utf8]
; file=txt
; postfix=.adv
; sample="""<WINDOW NAME=\"春臣\" IMAGE=\"name01.png\">
; 「ちょっ……待って…………！」

; <WINDOW>
; 真冬と夏実さんの動きは素速く……。
; """
[Engine_Artemis]
file=txt
postfix=.ast
sample="""text={
    [1]={
        name={name=\"舞雪\", ja=\"？？？\"},
        ja={
            {
                \"「――愛してる」\",
            },
        },
    },
"""
; [Engine_Artemis_1]
; file=txt
; postfix=.txt
; sample="""[背景 file=\"BG_まよカフェ_夜\"]

; [すもも 表示=\"女の子\" v=\"sumo_0003\"]
; 「あ、あれれ？　
; もも、なにかまちがえちゃったですか？」

; """
[Engine_AZSystem]
file=bin
postfix=.asb
contentSeparate=
regDic=2
sample="""10_search=^(.+)$

<如果无法提取可尝试加上extraData=type1>
<仍然失败可以自行观察asb字节，并在脚本中修改为对应操作数>
"""
[Engine_BlackRainbow]
file=bin
postfix=
contentSeparate=
readFileData=1
regDic=2
sample="""00_skip=^$
10_search=^(?P<name>【.+】)\\r\\n([\\s\\S]+)$
15_search=^([\\s\\S]+)$
extraData=\\x2B\\xC5\\x2A\\x3D

<原文含有\\r\\n，则需要修改设置页面段落分隔符为其他字符串（如⚡）>
<extraData为密钥>
"""
[Engine_CScript]
file=bin
postfix=
contentSeparate=
readFileData=1
regDic=2
sample="""10_search=(?P<unfinish>.+)\\\\n|(?<=\\\\n)(.+)$
15_search=^([\\S\\s]+)$
structure=paragraph
extraData=compress

<建议启用纯文本模式，或者去掉10_search>
<ctrlStr=0x3F,0x1A可以配置对话,选项关键字节>
"""
[Engine_CSV]
file=txt
contentSeparate=","
postfix=
regDic=2
readFileData=1
sample="""00_skip=^#
extraData=^(表示名|説明|説明文|ラベル|初期テキスト|名前候補)(\\.\\d+){0,1}$
postSkip=^[ -~]
separate=\\t
pureText=1

<默认分割符为,。默认首行为列名>
"""
[Engine_Cyberworks]
file=bin
postfix=.a0
contentSeparate=
regDic=2
readFileData=1
sample="""00_skip=^$
10_search=^【(?P<name>.+?)】
15_search=^(?P<unfinish>.+)
structure=paragraph

<默认编码为UTF-16>
"""
[Engine_EAGLS]
file=bin
postfix=
contentSeparate="\x0D\x0A"
regDic=2
sample="""00_skip=^$
01_skip=^[_]
10_search=&\\d+?\"([^\"]+?)\"|#(?P<name>[^&=0-9]+)
11_search=\"_SelStr\\d\",\"([^\"]+?)\"
startline=1
"""
[Engine_FVP]
file=bin
postfix=.hcb
contentSeparate=""
regDic=2
sample="""extraData=2000,C37E0,080808021A2009000E

<名字段结束地址,消息段开始地址,unfinish跟随字节流>
"""
[Engine_Kaguya]
file=bin
postfix=.ARC
contentSeparate=""
regDic=2
;10_search=(?P<unfinish>.+)
sample="""extraData=fixLength,exportAri

<用于TBLSTR.ARC>
"""
[Engine_Kaguya_Dat]
file=bin
postfix=.dat
contentSeparate=""
regDic=2
sample="""00_skip=^[a-zA-Z]
10_search=(?P<unfinish>.+)

<用于message.dat的版本02和03>
"""
; [Engine_Krkr]
; file=txt
; postfix=
; sample="""[name text=\"ターニャ\"]
; [voice id=\"tny\" file=\"vf00_000tny0001\"]
; 「むーっ……むむーっ……」
; [tp]

; """
[Engine_Krkr_Reg]
file=txt
postfix=
regDic=2
sample="""01_skip=^[*;]
10_search=^\\[cv.+?name=(?P<name>.+?)\\]
11_search=^\\[msgname.+?name=(?P<name>.+?)\\]
12_search=^\\[blink .*?text=\"(.+?)\"
endStr=np
ctrlStr=^[A-Za-z]

<只匹配名字或选项，其它行由脚本处理，按[]分割。>
<只有以上skip或search匹配成功，或脚本发现[np]时才表示段落结束>
<^[A-Za-z]表示控制段不提取>
"""
;00_skip=^$
;02_skip=^\\[(?!cv|msgname|blink )
[Engine_MED]
file=bin
postfix=
contentSeparate="\x00"
readFileData=1
sample="""プロローグ\\N深夜のゴミ捨て場0x00それは、とある夜のことだった。0x00【初山　啓太】0x00（……さてさて、何か無いかなぁ？）
"""
[Engine_MoonHir]
file=bin
postfix=
contentSeparate="\x00"
readFileData=1
regDic=2
sample="""00_skip=^[A-Za-z0-9\\[%]
01_skip=^$
10_search=^(?P<unfinish>.+)$
structure=paragraph

"""
[Engine_NekoSDK]
file=bin
postfix=.txt
contentSeparate=""
readFileData=1
regDic=2
sample="""10_search=^([\\S\\s]+)$

<原文含有\\r\\n，则需要修改设置页面段落分隔符为其他字符串（如⚡）>
<未提取选项>
"""
;\\x3F\\x00\\x00\\x00中年の──\r\nここの店主だろう男が笑顔を張り付けて近付いてくる。

[Engine_RPGMV]
file=json
postfix=.json
contentSeparate=",",":"
regDic=2
sample="""00_skip=^<.+?>$
01_skip=^<(?!code)
10_search=^<code102>([\\S\\s]+)$
15_search=^<code401> ?(?P<name>[\\S\\s]+)：$
16_search=^<code401>(?P<unfinish>[\\S\\s]+)$
20_search=^<.+?>([^ -\\[\\]-~][\\S\\s]+)$
extractKey=name,description,nickname
<RPGMV会在每行开头加上控制段以便进行分段处理，控制段<...>不要提取出来>
<推荐Map里的对话文本和其他的json分开提取，用不同的正则方便处理>
"""
[Engine_RPGVX]
file=json
postfix=.json
contentSeparate=",",":"
regDic=2
sample="""00_skip=^<.+?>$
01_skip=^<(?!code)
10_search=^<code102>([\\S\\s]+)$
15_search=^<code401>\\\\C\\[\\d\\]\\[(?P<name>.+?)\\]\\\\C\\[\\d\\]$
16_search=^<code401>(?P<unfinish>[\\S\\s]+)$
20_search=^<.+?>([^ -\\[\\]-~][\\S\\s]+)$
extractKey=none
<请先使用tools/RPGMakerVX文件夹下工具将rvdata转为json>
<Key:name,description,nickname,note,message1,message2,message3,message4>
<推荐Map里的对话文本和其他的json分开提取，用不同的正则方便处理>
"""
[Engine_RenPy]
file=txt
postfix=.rpy
sample="""translate chinese s000_00h_3ece9cee:
    voice "sound/voice/eri/eri_0018.ogg"
    eri "「ん゛っ……{image=gui/heart.png}{alt}heart{/alt}　ご主人しゃまの、まひゃおっきくなっへ……{image=gui/heart.png}{alt}heart{/alt}」"
translate chinese strings:
    old "『俺のメスとして可愛がってやるか』"
    new "『俺のメスとして可愛がってやるか』"
"""
[Engine_ScrPlayer]
file=bin
postfix=.scr
contentSeparate=
readFileData=1
regDic=2
sample="""00_skip=^$
20_search=^([\\S\\s]+?)\\n?$
"""
; [Engine_SiglusEngine]
; file=txt
; postfix=.txt
; sample="""配合SiglusTools使用: dump ss (copy text)
; """
; nameList="マナ,謙太,みお,かなで,ここね,タカシ,まこと,男子Ａ,男子Ｂ,男子Ｃ,女生徒,教師,女の子,父親,男子生徒,男Ａ,男Ｂ,男Ｃ,ＡＶ女優"
[Engine_SystemC]
file=bin
postfix=
contentSeparate="\r\n"
sample="""男子達　（８００３）　男子Ａ
「うおおおおぉぉぉいくイク行っちゃうううぅ～！！！」
"""
; [Engine_TXT_Paragraph]
; file=txt
; postfix=
; regDic=2
; sample="""00_skip=^$
; 01_skip=^[ -~]
; 10_search=^(?P<unfinish>.+)$
; extraData=^[「（]
; """
[Engine_WillPlus]
file=bin
postfix=.ws2
contentSeparate="(%L|char\\0|\\x01\\x0F|\\x00\\x0F)"
sample="""%LF雪乃
char\\0「起きて…ねえ起きて……」%K%P
"""
[Engine_Yuris]
file=bin
postfix=.ybn
contentSeparate=
readFileData=1
regDic=2
sample="""01_skip=^M[\\S\\s]{2}\"(?=[^\\x81-\\xEF]|■|◆)
10_search=^M[\\S\\s]{2}\"(.+?)\"
15_skip=^[^\\x81-\\xEF]
20_search=^(?P<name>.{1,20}?)(「.+」)$
21_search=^(?P<name>.{1,20}?)(（.+）)$
25_search=^(.+)$
decrypt=auto
extraData=9

<如果提取内容为空请尝试把ysc.bin放入工作目录>
<decrypt为auto是自动解密，也可以指定密钥，如果已解密则删除decrypt这一行>
<version=0表示自动读取版本； 选项函数默认参数个数最小为9>
"""
;";注释

[Engine_TXT]
file=txt
postfix=
regDic=1
nameList=""
[Engine_BIN]
file=bin
contentSeparate="\x0D\x0A"
postfix=
regDic=1
nameList=""
[Engine_JSON]
file=json
encode=utf-8
postfix=.json
contentSeparate=",",":"
regDic=1

[Engine_Custom]
file=bin
postfix=
regDic=2
contentSeparate="\r\n"
sample="""自定义脚本
"""

;支持的导出格式:
[OutputFormat]
format0="json { orig:\"\" }"
format1="json { orig:orig }"
format2="json [ {name,messageRN} ]"
format3="json { origRN:\"\" }"
format4="json { origRN:origRN }"
format5="txt  { orig }"
format6="txt  [ origRN ]"
format7="json [ origRN ]"
format8="xlsx { orig:\"\" }"
format9="txt  { ☆orig ★orig }"
